name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

jobs:
  build-test-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # needed for SonarCloud blame info

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install PlatformIO and latest gcovr
        run: |
          pip install --upgrade platformio gcovr jq

      - name: Download and set up SonarCloud build-wrapper
        run: |
          mkdir -p $HOME/.sonar
          curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/

      - name: Build for Sonar with dummy main
        run: |
          echo "int main() { return 0; }" > src/main.cpp
          $HOME/.sonar/build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output \
            pio run -e sonar
          rm -f src/main.cpp

      - name: Convert compile_commands.json paths to absolute
        run: |
          cp bw-output/compile_commands.json bw-output/compile_commands.json.bak
          jq --arg root "$GITHUB_WORKSPACE" '
            map(.file |= ($root + "/" + .file))
          ' bw-output/compile_commands.json.bak > bw-output/compile_commands.json

      - name: Debug build-wrapper paths
        run: |
          echo "Current working dir:"
          pwd
          echo "GITHUB_WORKSPACE:"
          echo $GITHUB_WORKSPACE
          echo "First 20 files in compile_commands.json:"
          jq -r '.[].file' bw-output/compile_commands.json | head -n 20

      - name: Run native tests with coverage
        run: |
          pio test -e test_native --without-uploading -v
          python -m gcovr -r . --sonarqube coverage.xml --exclude 'test/*' --exclude '.pio/*'

      - name: Run Cppcheck static analysis
        run: |
          cppcheck --enable=all --xml --xml-version=2 src include lib 2> cppcheck-report.xml || true

      - name: Upload coverage and analysis to SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.qualitygate.wait=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secr_
