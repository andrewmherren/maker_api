name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

jobs:
  build-test-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # needed for SonarCloud blame info

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install PlatformIO and latest tools
        run: |
          pip install --upgrade platformio gcovr jq

      - name: Download and set up SonarCloud build-wrapper
        run: |
          mkdir -p $HOME/.sonar
          curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/

      - name: Build for Sonar with dummy main
        run: |
          echo "int main() { return 0; }" > src/main.cpp
          $HOME/.sonar/build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output \
            pio run -e sonar
          rm -f src/main.cpp

      - name: Debug check workspace and source files
        run: |
          echo "PWD: $(pwd)"
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          echo "Contents of src/:"
          ls -l src/
          echo "Contents of include/:"
          ls -l include/
          echo "Contents of test/:"
          ls -l test/

      - name: Fix absolute paths in compile_commands.json
        run: |
          echo "Fixing absolute paths in compile_commands.json..."
          cp bw-output/compile_commands.json bw-output/compile_commands.json.bak
          sed -i "s|/home/runner/work/maker_api/maker_api|$GITHUB_WORKSPACE|g" bw-output/compile_commands.json

          # Convert any remaining relative file paths to absolute
          tmpfile=$(mktemp)
          jq --arg dir "$GITHUB_WORKSPACE" '
            map(
              if (.file | startswith("/")) then . else .file = ($dir + "/" + .file) end
            )
          ' bw-output/compile_commands.json > "$tmpfile" && mv "$tmpfile" bw-output/compile_commands.json

      - name: Debug inspect compile_commands.json
        run: |
          echo "Number of entries in compile_commands.json:"
          jq length bw-output/compile_commands.json
          echo "First 20 files in compile_commands.json:"
          jq -r '.[].file' bw-output/compile_commands.json | head -n 20
          echo "Build-wrapper output directory contents:"
          ls -l bw-output

      - name: Run native tests with coverage
        run: |
          pio test -e test_native --without-uploading -v
          python -m gcovr -r . --sonarqube coverage.xml --exclude 'test/*' --exclude '.pio/*'

      - name: Run Cppcheck static analysis
        run: |
          cppcheck --enable=all --xml --xml-version=2 src include lib 2> cppcheck-report.xml || true

      - name: Debug check files for Sonar indexing
        run: |
          echo "Files in src/ matching sonar.sources:"
          find $GITHUB_WORKSPACE/src -type f | head -n 20
          echo "Files in include/ matching sonar.sources:"
          find $GITHUB_WORKSPACE/include -type f | head -n 20

      - name: Upload coverage and analysis to SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.sources=src,include
            -Dsonar.cfamily.compile-commands=bw-output/compile_commands.json
            -Dsonar.verbose=true
            -Dsonar.qualitygate.wait=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
