; PlatformIO Project Configuration
; Simplified for modular ESP32 + Native testing with coverage

[platformio]
default_envs = test_native

; ---------------------------------------------------------------------
; Base environment (shared flags/libraries)
; ---------------------------------------------------------------------
[test_base]
test_framework = unity
lib_deps = 
    bblanchon/ArduinoJson@^6.21.0
    https://github.com/FabioBatSilva/ArduinoFake.git
lib_ldf_mode = deep+
test_build_src = yes
build_flags = 
    -DUNITY_INCLUDE_CONFIG_H
    -DMAKER_API_STANDALONE_TEST
    -DWEB_PLATFORM_OPENAPI=1
    -DWEB_PLATFORM_MAKERAPI=1
    -DARDUINO_ARCH_ESP32
    -DLIBRARY_COMPILE_ONLY
    -std=gnu++17

; ---------------------------------------------------------------------
; Native test environment (runs on host using ArduinoFake)
; ---------------------------------------------------------------------
[env:test_native]
extends = test_base
platform = native

build_unflags = -std=gnu++11
build_flags =
    ${test_base.build_flags}
    -DNATIVE_PLATFORM
    -g
    -O0
    --coverage
    -fprofile-arcs
    -ftest-coverage
    -lgcov
    -Wl,--subsystem,console
    -DARDUINOFAKE_ENABLE_WIFI
    -DARDUINOFAKE_ENABLE_SERIAL
    -DARDUINOFAKE_ENABLE_STRING

build_src_filter =
    +<*>
    -<main.cpp>

test_filter = test_*
check_tool = cppcheck
check_flags = cppcheck: --enable=all --std=c++17

; ---------------------------------------------------------------------
; ESP32 test environment (runs on hardware)
; ---------------------------------------------------------------------
[env:test_esp32]
extends = test_base
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino
monitor_speed = 115200
upload_speed = 921600
build_flags = 
    ${test_base.build_flags}
    -DESP_PLATFORM
    -O2
build_src_filter = 
    +<*>
    -<main.cpp>
test_filter = test_*
